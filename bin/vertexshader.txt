attribute vec3 positionzz;
attribute vec3 colorzz;
attribute vec4 normalzz;
attribute vec3 texcoords;

attribute vec4 amb_in;
attribute vec4 diff_in;
attribute vec4 spec_in;
attribute float shine_in;

varying vec3 out_tc;

varying vec4 out_diffuse;
varying vec4 out_specular;

uniform vec4 light_pos;

void main(void)
{
    vec3 vertex_normal = normalize(gl_NormalMatrix * normalzz.xyz);
	vec3 v = vec3(gl_ModelViewMatrix * vec4(positionzz, 1.0));
	vec3 L = normalize(vec3(gl_ModelViewMatrix * light_pos)  - v); 
	vec3 E = normalize(-v);
	vec3 R = normalize( 2.0 * dot(L,vertex_normal) * vertex_normal - L );

	// global and light source ambient
	out_diffuse = gl_LightSource[0].ambient + gl_LightModel.ambient;
	// light source diffuse
	out_diffuse += gl_LightSource[0].diffuse * max(dot(L,vertex_normal),0.0);

	// light source specular
	out_specular = vec4(1,1,1,14) * gl_LightSource[0].specular * pow(max(dot(R, E),0.0), shine_in);

	out_tc = texcoords;

	gl_Position = gl_ModelViewProjectionMatrix * vec4(positionzz, 1.0);
}

